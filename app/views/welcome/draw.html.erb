<style type="text/css">
	#selectable_source .ui-selecting { background: #FECA40; }
	#selectable_source .ui-selected { background: #F39814; color: white; }
	#selectable_source { list-style-type: none; margin: 0; padding: 0; width: 100%; }
	#selectable_source li { margin: 3px; padding: 0.4em; font-size: 1.4em; height: 18px; border: 2px;}

	#selectable_translation .ui-selecting { background: #FECA40; }
	#selectable_translation .ui-selected { background: #F39814; color: white; }
	#selectable_translation { list-style-type: none; margin: 0; padding: 0; width: 100%; }
	#selectable_translation li { margin: 3px; padding: 0.4em; font-size: 1.4em; height: 18px; border: 2px;}

</style>

<script>
	$(function() {
		$( "#selectable_source" ).selectable();
		$( "#selectable_translation" ).selectable();
	});
</script>

<table>
	<tr>
		<td width="200px">
			<ol id="selectable_source">
				<li class="ui-widget-content">Item 1</li>
				<li class="ui-widget-content">Item 2</li>
				<li class="ui-widget-content">Item 3</li>
				<li class="ui-widget-content">Item 4</li>
				<li class="ui-widget-content">Item 5</li>
				<li class="ui-widget-content">Item 6</li>
				<li class="ui-widget-content">Item 7</li>
			</ol>
		</td>
		<td width="200px"></td>
		<td width="200px">
			<ol id="selectable_translation">
				<li class="ui-widget-content">Item 1</li>
				<li class="ui-widget-content">Item 2</li>
				<li class="ui-widget-content">Item 3</li>
				<li class="ui-widget-content">Item 4</li>
				<li class="ui-widget-content">Item 5</li>
				<li class="ui-widget-content">Item 6</li>
				<li class="ui-widget-content">Item 7</li>
			</ol>
		</td>
	</tr>
</table>

<script type="text/javascript">
	var svg = Raphael(300, 10, 100, 400),
		myLines = [];
	function svgDrawLine(eTarget, eSource) {

	    // wait 1 sec before draw the lines, so we can get the position of the draggable
	    setTimeout(function () {

	        var $source = eSource;
	        var $target = eTarget;

	        // origin -> ending ... from left to right
	        // 10 + 10 (padding left + padding right) + 2 + 2 (border left + border right)
	        var originX = $source.offset().left + $source.width() + 20 + 4;
	        var originY = $source.offset().top + (($source.height() + 20 + 4) / 2);

	        var endingX = $target.offset().left;
	        var endingY = $target.offset().top + (($target.height() + 20 + 4) / 2);

	        var space = 20;
	        var color = 'red';

	        // draw lines
	        // http://raphaeljs.com/reference.html#path			
	        var a = "M" + originX + " " + originY + " L" + (originX + space) + " " + originY; // beginning
	        var b = "M" + (originX + space) + " " + originY + " L" + (endingX - space) + " " + endingY; // diagonal line
	        var c = "M" + (endingX - space) + " " + endingY + " L" + endingX + " " + endingY; // ending
	        var all = a + " " + b + " " + c;

	        /*
	        // log (to show in FF (with FireBug), Chrome and Safari)			
	        console.log("New Line ----------------------------");
	        console.log("originX: " + originX + " | originY: " + originY + " | endingX: " + endingX + " | endingY: " + endingY + " | space: " + space + " | color: " + color );				
	        console.log(all); 
	        */

	        // write line
	        myLines[myLines.length] = svg
											.path(all)
											.attr({
											    "stroke": color,
											    "stroke-width": 2,
											    "stroke-dasharray": "--."
											});

	    }, 1000);

	}

	$('#selectable_translation').bind("selectableselected", function(event, ui) {
		svgDrawLine($('#selectable_source .ui-selected'), $(ui.selected));
		console.log($(ui.selected));
	})
</script>
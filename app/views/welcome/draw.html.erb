<style type="text/css">
	#selectable_source .ui-selecting { background: #89C0E6; }
	#selectable_source .ui-selected.selectedfilter { background: #5BAFE7; color: white; }
	#selectable_source { list-style-type: none; margin: 0; padding: 0; width: 100%; }
	#selectable_source li { margin: 3px; padding: 0.4em; font-size: 1.4em; height: 18px; border: 2px;}
	#selectable_source .correct { background: #5DD3A4; color: black;}
	#selectable_source .wrong { background: #F39814; color: black;}

	#selectable_translation .ui-selecting { background: #89C0E6; }
	#selectable_translation .ui-selected.selectedfilter { background: #5BAFE7; color: white; }
	#selectable_translation { list-style-type: none; margin: 0; padding: 0; width: 100%; }
	#selectable_translation li { margin: 3px; padding: 0.4em; font-size: 1.4em; height: 18px; border: 2px;}
	#selectable_translation .correct { background: #5DD3A4; color: black;}
	#selectable_translation .wrong { background: #F39814; color: black;}

	.source {
		display: none;
	}
	.target {
		display: none;
	}

	#menu {
	    display: none;
	    position: absolute;
	    padding: 10px;
	    background-color: #ddd;
	    border: 1px solid #000;
	}

</style>

<script type="text/javascript">
	$(function() {
		$( "#selectable_source" ).selectable({
			selected: function (event, ui) {
		        if ($(ui.selected).hasClass('selectedfilter')) {
		            $(ui.selected).removeClass('selectedfilter');
		            $(ui.selected).removeClass('ui-selected');
		            // do unselected stuff
		        } else {            
		            $(ui.selected).addClass('selectedfilter');
		            var sourceText = $($(ui.selected).children()[1]).text();
		            var targetText = $($(ui.selected).children()[2]).text();
		            if( sourceText != '' && targetText != '') {
		            	var sourceTokens = sourceText.split(',');
		            	var targetTokens = targetText.split(',');
		            	for (var i = 0; i < sourceTokens.length; ++i) {
		            		$($('#selectable_source').children()[parseInt(sourceTokens[i])]).addClass('ui-selected').addClass('selectedfilter');	
		            	}
		            	for (var i = 0; i < targetTokens.length; ++i) {
		            		$($('#selectable_translation').children()[parseInt(targetTokens[i])]).addClass('ui-selected').addClass('selectedfilter');
		            	};            		
		            }
		            console.log(sourceText);
		            console.log(targetText);
		            // do selected stuff
		        }
		    },
		    unselected: function (event, ui) {
		        $(ui.unselected).removeClass('selectedfilter');
		    }
		});
		$( "#selectable_translation" ).selectable({
			selected: function (event, ui) {
		        if ($(ui.selected).hasClass('selectedfilter')) {
		            $(ui.selected).removeClass('selectedfilter');
		            $(ui.selected).removeClass('ui-selected');
		            // do unselected stuff
		        } else {            
		            $(ui.selected).addClass('selectedfilter');
		            // do selected stuff
		        }
		    },
		    unselected: function (event, ui) {
		        $(ui.unselected).removeClass('selectedfilter');
		    }
		});

		// right click and add tag to each word
		$(".customerRow").contextMenu({ menu: 'menu' }, 
        function(action, el, pos) { 
        	var $el = el;
        	var oldTag = $el[0].lastChild;
        	var newTag = document.createElement("SPAN");
        	var text = document.createTextNode(action);
        	newTag.appendChild(text);
        	$el[0].removeChild(oldTag);
        	$el[0].appendChild(newTag);
        	// console.log(action);
        	// console.log(el);
        	// console.log(pos);
        });
	});

	// Keys "enum"
	var KEY = {
	    BACKSPACE: 8,
	    TAB: 9,
	    ENTER: 13,
	    ESCAPE: 27,
	    SPACE: 32,
	    PAGE_UP: 33,
	    PAGE_DOWN: 34,
	    END: 35,
	    HOME: 36 ,
	    LEFT: 37,
	    UP: 38,
	    RIGHT: 39,
	    DOWN: 40,
	    NUMPAD_ENTER: 108,
	    COMMA: 188,
	    C_SMALL: 99,
	    C_BIG: 67,
	    D_SMALL: 100,
	    D_BIG: 68,
	    I_SMALL: 105,
	    I_BIG: 73,
	};

	var MOUSE = {
		LEFT: 1,
		MIDDLE: 2,
		RIGHT: 3,
	};
</script>

<table>
	<tr>
		<td width="200px">
			<ol id="selectable_source">
				<li class="ui-widget-content customerRow"><span>Item 1</span><span class="source"></span><span class="target"></span><span></span></li>
				<li class="ui-widget-content customerRow"><span>Item 2</span><span class="source"></span><span class="target"></span><span></span></li>
				<li class="ui-widget-content customerRow"><span>Item 3</span><span class="source"></span><span class="target"></span><span></span></li>
				<li class="ui-widget-content customerRow"><span>Item 4</span><span class="source"></span><span class="target"></span><span></span></li>
				<li class="ui-widget-content customerRow"><span>Item 5</span><span class="source"></span><span class="target"></span><span></span></li>
				<li class="ui-widget-content customerRow"><span>Item 6</span><span class="source"></span><span class="target"></span><span></span></li>
				<li class="ui-widget-content customerRow"><span>Item 7</span><span class="source"></span><span class="target"></span><span></span></li>
			</ol>
		</td>
		<td id="canvas" width="200px"></td>
		<td width="200px">
			<ol id="selectable_translation">
				<li class="ui-widget-content customerRow"><span>Item 1</span><span class="source"></span><span class="target"></span><span></span></li>
				<li class="ui-widget-content customerRow"><span>Item 2</span><span class="source"></span><span class="target"></span><span></span></li>
				<li class="ui-widget-content customerRow"><span>Item 3</span><span class="source"></span><span class="target"></span><span></span></li>
				<li class="ui-widget-content customerRow"><span>Item 4</span><span class="source"></span><span class="target"></span><span></span></li>
				<li class="ui-widget-content customerRow"><span>Item 5</span><span class="source"></span><span class="target"></span><span></span></li>
				<li class="ui-widget-content customerRow"><span>Item 6</span><span class="source"></span><span class="target"></span><span></span></li>
				<li class="ui-widget-content customerRow"><span>Item 7</span><span class="source"></span><span class="target"></span><span></span></li>
			</ol>
		</td>
	</tr>
</table>

<ul id="menu" class="contextMenu">
  	<li><a href="#MET">Meta Word</a></li>        
    <li><a href="#TOK">Tokenization Error</a></li>   
    <li><a href="#TYP">Typo</a></li>                 
    <li><a href="#">Delete Tag</a></li>
</ul>

<script type="text/javascript">
	var canvas = Raphael("canvas");
	var $canvas = $("#canvas");
	var $li;
	var sourceNum = $("#selectable_source").children().length;
	var translationNum = $("#selectable_translation").children().length;
	var lines = new Array(sourceNum); 
	for (var i = lines.length - 1; i >= 0; --i) {
		lines[i] = new Array(translationNum); // translation items number
	}; 
	function drawLines(sources, targets, color) {
		if (sources != [] && targets != []){
			var sourceTokens = new Array();
			var targetTokens = new Array();
			// get sources and targets index
			$.each(sources, function(s_i,s_val){
				var $source = $(s_val);
				sourceTokens.push($source.parent().children().index($source));
			});
			$.each(targets, function(t_i,t_val){
				var $target = $(t_val);
				targetTokens.push($target.parent().children().index($target));
			});

			// add content for source and target span
			$.each(sources,function(s_i,s_val){
				var $source = $(s_val);
				$($source.children()[1]).text(sourceTokens.join());
				$($source.children()[2]).text(targetTokens.join());
			})
			$.each(targets,function(t_i,t_val){
				var $target = $(t_val);
				$($target.children()[1]).text(sourceTokens.join());
				$($target.children()[2]).text(targetTokens.join());
			})		    

			// draw lines
			$.each(sources, function(s_i,s_val){
				var $source = $(s_val);
				var startIndex = $source.parent().children().index($source);
				$.each(targets, function(t_i,t_val){
					var $target = $(t_val);					
					var endIndex = $target.parent().children().index($target);
					if (lines[startIndex][endIndex] == undefined || lines[startIndex][endIndex].attrs == null) {
						drawLine($source, $target, startIndex, endIndex, sourceTokens, targetTokens, color);
					} else {
						lines[startIndex][endIndex].remove();
						drawLine($source, $target, startIndex, endIndex, sourceTokens, targetTokens, color);
					};
				})	
			});
		}
	}

	function drawLine(source, target, startIndex, endIndex, sourceTokens, targetTokens, color){
		var originX = 0;
		var originY = source.offset().top - $canvas.offset().top + source.height();
		var endingX = $canvas.width();
		var endingY = target.offset().top - $canvas.offset().top + target.height();
		var line = "M" + originX + " " + originY + " L" + endingX + " " + endingY; 
		lines[startIndex][endIndex] = canvas.path(line).attr({
			"stroke": color,
			"stroke-width": 2,
			"stroke-dasharray": "--."
		});	
		if ('green' == color){
			source.addClass('correct');
			target.addClass('correct');
		}		
		if ('orange' == color) {
			source.addClass('wrong');
			target.addClass('wrong');
		};
		source.removeClass('selectedfilter');
	    source.removeClass('ui-selected');
		target.removeClass('selectedfilter');
	    target.removeClass('ui-selected');
	}

	function removeLines(sources, targets) {
		if (sources != [] && targets != []){

			// remove contents from source and target span
			$.each(sources,function(s_i,s_val){
				var $source = $(s_val);
				$($source.children()[1]).text('');
				$($source.children()[2]).text('');
			})
			$.each(targets,function(t_i,t_val){
				var $target = $(t_val);
				$($target.children()[1]).text('');
				$($target.children()[2]).text('');
			})	

			// remove lines
			$.each(sources, function(s_i,s_val){
				var source = $(s_val);
				$.each(targets, function(t_i,t_val){
					var target = $(t_val);
					var startIndex = source.parent().children().index(source);
					var endIndex = target.parent().children().index(target);
					if (lines[startIndex][endIndex] != undefined) {
						lines[startIndex][endIndex].remove();
					};
					source.removeClass('selectedfilter').removeClass('ui-selected');
				    source.removeClass('correct').removeClass('wrong');
					target.removeClass('selectedfilter').removeClass('ui-selected');
				    target.removeClass('correct').removeClass('wrong');
				})	
			});
		}
	}

	$(window).keydown(function(event) {
		var sources = $('#selectable_source .ui-selected');
		var targets = $('#selectable_translation .ui-selected');
		switch(event.keyCode) {
			case KEY.SPACE:
			case KEY.C_SMALL:
			case KEY.C_BIG:
				drawLines(sources, targets, 'green');
				break;
			case KEY.D_SMALL:
			case KEY.D_BIG:
				removeLines(sources, targets);
				break;
			case KEY.I_SMALL:
			case KEY.I_BIG:
				drawLines(sources, targets, 'orange');
				break;
		}
	});

	// $("li").bind('contextmenu',function(event){
	// 	$li = $(event.target);
	// 	$('#menu').css({
	//         top: event.pageY+'px',
	//         left: event.pageX+'px'
	//     }).show();
	// 	return false;
	// });

	// $('#menu').click(function() {
 //        $('#menu').hide();
 //    });
 //    $(document).click(function() {
 //        $('#menu').hide();
 //    });

 //    $("a").bind('click', function(event){
	// 	console.log(this);
	// });

	// $(function(){
	//     $(document).mousedown(function(event){
	//     	$('#menu').hide();
	//     });
	// });

	

	// $("li").mousedown(function(event){
	// 	switch(event.which) {
	//         case MOUSE.RIGHT:
	//             console.log('Right mouse button pressed');
	//             return false;
	//             break;        
	// 	}
	// });

</script>